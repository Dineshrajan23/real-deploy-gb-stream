# This version is obsolete, but removing it avoids the warning
# version: '3.8'

services:
  traefik:
    image: "traefik:v2.9"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - gboss-net
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - gboss-net
    restart: unless-stopped
    # --- ADDED: Healthcheck to ensure the DB is ready ---
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: django_backend
    env_file:
      - ./.env
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    # environment:
    #   - DB_NAME=${POSTGRES_DB}
    #   - DB_USER=${POSTGRES_USER}
    #   - DB_PASS=${POSTGRES_PASSWORD}
    #   - DB_HOST=db
    #   - SECRET_KEY=${SECRET_KEY}
    #   - RTMP_SERVER_HOST=rtmpserver
    #   - RTMP_SERVER_API_PORT=${RTMP_SERVER_API_PORT}
    #   - RTMP_HLS_BASE_URL=${RTMP_HLS_BASE_URL}
    # --- MODIFIED: Wait for the DB to be healthy ---
    depends_on:
      db:
        condition: service_healthy
    networks:
      - gboss-net
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  rtmp_poller:
    build: ./backend
    container_name: rtmp_poller_service
    env_file:
      - ./.env
    command: python manage.py poll_rtmp_streams
    # environment:
    #   - DB_NAME=${POSTGRES_DB}
    #   - DB_USER=${POSTGRES_USER}
    #   - DB_PASS=${POSTGRES_PASSWORD}
    #   - DB_HOST=db
    #   - SECRET_KEY=${SECRET_KEY}
    #   - RTMP_SERVER_HOST=rtmpserver
    #   - RTMP_SERVER_API_PORT=${RTMP_SERVER_API_PORT}
    #   - RTMP_HLS_BASE_URL=${RTMP_HLS_BASE_URL}
    #   - RTMP_POLLING_INTERVAL_SECONDS=${RTMP_POLLING_INTERVAL_SECONDS}
    # --- MODIFIED: Wait for DB and rtmpserver ---
    depends_on:
      db:
        condition: service_healthy
      rtmpserver:
        condition: service_started
    networks:
      - gboss-net
    restart: unless-stopped

  rtmpserver:
    container_name: "rtmpserver"
    build:
      context: ./rtmpserver_build
      dockerfile: Dockerfile
    ports:
      - "1935:1935"
    volumes:
      - type: bind
        source: ./rtmpserver_configs/config.json
        target: /etc/rtmpserver/config.json
    environment:
      ENTRYLABEL: RTMPServer
      TZ: Asia/Kolkata
      CONFIG_DIR: /etc/rtmpserver
    shm_size: '8gb'
    networks:
      - gboss-net
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rtmpserver-hls.rule=PathPrefix(`/hls`)"
      - "traefik.http.services.rtmpserver-hls.loadbalancer.server.port=8082"

  frontend:
    build: ./frontend
    container_name: nextjs_frontend
    env_file:
      - ./.env
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    # environment:
    #   - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    #   - NEXT_PUBLIC_RTMP_URL=${NEXT_PUBLIC_RTMP_URL}
    networks:
      - gboss-net
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

networks:
  gboss-net:
    name: gboss-net

volumes:
  postgres_data: